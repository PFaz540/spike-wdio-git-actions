# https://github.com/marketplace?type=actions
# https://github.com/actions

name: Run WebdriverIO tests

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  wdio-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 2
      matrix:
        run:
          [
            # "av_prod.spec.js",
            "g4m_prod.spec.js",
            # "curly_music.spec.js",
            # "guitarguitar.spec.js",
            # "pmt.spec.js",
          ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: NPM Install
        run: npm install

      - name: Execute WDIO Tests
        run: npm test -- --spec=./tests/${{ matrix.run }}

      - name: Upload Report Artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-artifacts
          path: |
            allure-results/*.json
            allure-results/*.xml
            allure-results/*.png
            screenshots/*.png

      - name: Get Allure History
        uses: actions/checkout@v2
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Generate Allure Report
        # https://github.com/simple-elf/allure-report-action
        uses: simple-elf/allure-report-action@master
        id: allure-report
        with:
          allure_results: allure-results
          allure_report: allure-report
          allure_history: allure-history
          gh_pages: gh-pages
          keep_reports: 7

      - name: Deploy Allure report to GitHub Pages
        # https://github.com/peaceiris/actions-gh-pages
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0
          release_name: Release v1.0.0
          body: This is the first release
          draft: true
          prerelease: false